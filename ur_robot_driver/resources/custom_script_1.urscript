# HEADER_BEGIN
COMPUTER_DRIVER_IP = "192.168.56.1"
SOCKET_NAME = "monitoring_socket"
SOCKET_CONFIRMATION_RETURN = 199   # if changed the values hast be adjusted in `monitoring_node`
DATA_SIZE = 6
global stop_execution = 0
MULTIPLICATION_SCALING_FACTOR = 1000000

# BEGIN: variable to set before script is sent to the robot
global DrillPosX=<<DRILL_POS_X_REPLACE>>
global DrillPosY=<<DRILL_POS_Y_REPLACE>>
global DrillPosZ=<<DRILL_POS_Z_REPLACE>>
global DrillDepthSet=<<DRILL_DEPTH_REPLACE>>

textmsg("Set variables are:")
textmsg(" DrillPosX: ", DrillPosX)
textmsg(" DrillPosY: ", DrillPosY)
textmsg(" DrillPosZ: ", DrillPosZ)
textmsg(" DrillDepthSet: ", DrillDepthSet)

# END: variable to set before script is sent to the robot

global PressForceSet=110
global DrillTimeSet=7.5
global ForceDampingSet=0.07
global Nz=0
global Nx=0
global Loop_active=True

global RobotPos=get_actual_tcp_pose ()

thread comm_thread():
  textmsg("Entering Comm Thread")

  while stop_execution == 0:
    data = socket_read_binary_integer(DATA_SIZE, "monitoring_socket")
    if data[1] > 0:
      enter_critical
      DrillDepthSet = data[2]/MULTIPLICATION_SCALING_FACTOR
      stop_execution = data[6]/MULTIPLICATION_SCALING_FACTOR
      if stop_execution == 1:
        Loop_active=False
      end
      exit_critical
    end
    socket_send_int(SOCKET_CONFIRMATION_RETURN, "monitoring_socket")
  end
end

thread move_thread():
  RobotPos = get_actual_tcp_pose()
  RobotPos[0] = DrillPosX
  RobotPos[1] = DrillPosY
  RobotPos[2] = DrillPosZ
  while (Loop_active):
    RobotPos[2] = RobotPos[2] + DrillDepthSet
    movel(RobotPos, a=1.2, v=0.25)
    RobotPos[2] = RobotPos[2] - DrillDepthSet
    movel(RobotPos, a=1.2, v=0.25)
  end
end

def updown():
  main_comm_thread = run comm_thread()
  main_move_thread = run move_thread()
  join main_move_thread
  join main_comm_thread
end


# HEADER_END


set_tcp(p[0.0,0.0,0.212,0.0,0.0,0.0])
set_target_payload(0.500000, [0.000000, 0.000000, 0.020000], [0.000485, 0.000485, 0.000485, 0.000000, 0.000000, 0.000000])
set_safety_mode_transition_hardness(1)
set_gravity([0.0, -9.82, 6.013015783813504E-16])
set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
set_tool_output_mode(0)
set_tool_digital_output_mode(0, 1)
set_tool_digital_output_mode(1, 1)
set_tool_voltage(0)
set_standard_analog_input_domain(0, 1)
set_standard_analog_input_domain(1, 1)
set_tool_analog_input_domain(0, 1)
set_tool_analog_input_domain(1, 1)
set_analog_outputdomain(0, 0)
set_analog_outputdomain(1, 0)
set_input_actions_to_default()

textmsg("Establishing connection...")
connection_status = socket_open(COMPUTER_DRIVER_IP, 30003, "monitoring_socket")

if connection_status == True:

  textmsg("Connection established successfully.")

  updown()

  textmsg("Exiting main while loop in the custom script")

else:

  textmsg("Could not establish connection.")

end

socket_close("monitoring_socket")
